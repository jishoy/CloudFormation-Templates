AWSTemplateFormatVersion: 2010-09-09
Description: vpcwith public
Resources: 
   VPC:
     Type: AWS::EC2::VPC
     Properties:
       CidrBlock: 10.0.0.0/16
       EnableDnsSupport: true
       EnableDnsHostnames: true
       Tags:
         - Key: Name
           Value: jishoy-vpc
           
   InternetGateway:
     Type: AWS::EC2::InternetGateway
     Properties:
       Tags:
         - Key: Name
           Value: jishoy-vpc
           
   InternetGatewayAttachment:
     Type: AWS::EC2::VPCGatewayAttachment
     Properties:
       InternetGatewayId: !Ref InternetGateway
       VpcId: !Ref VPC
      
      
   PublicSubnet1:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId: !Ref VPC
       AvailabilityZone: !Select [ 0, !GetAZs '' ]
       CidrBlock: 10.0.1.0/24
       MapPublicIpOnLaunch: true
       Tags:
         - Key: Name
           Value: jishoy-Public Subnet 1(AZ1)
           
   PrivateSubnet2:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId: !Ref VPC
       AvailabilityZone: !Select [ 2, !GetAZs  '' ]
       CidrBlock: 10.0.2.0/24
       Tags:
         - Key: Name
           Value: jishoy-PrivateSubnet 2(AZ2)

   RouteTable:
     Type: AWS::EC2::RouteTable
     Properties:
       VpcId: !Ref VPC
       
   InternetRoute:
     Type: AWS::EC2::Route
     DependsOn: InternetGateway
     Properties:
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref InternetGateway
       RouteTableId: !Ref RouteTable
       
   PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1

      
   SecurityGroupPublic:
     Type:  AWS::EC2::SecurityGroup
     Properties:
      GroupDescription: Enable SSH 
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 42.106.181.114/32

   SecurityGroupPrivate:
     Type:  AWS::EC2::SecurityGroup
     Properties:
      GroupDescription: SSH to bastion
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 
            Fn::Sub: ${EC2Instance1.PrivateIp}/32
        

   
   EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-03d5c68bab01f3496
      InstanceType: t2.micro
      KeyName: test-orgon
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds: 
        - !Ref SecurityGroupPublic

   EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-03d5c68bab01f3496
      InstanceType: t2.micro
      KeyName: test-orgon
      SubnetId: !Ref PrivateSubnet2
      SecurityGroupIds: 
        - !Ref SecurityGroupPrivate


# Outputs:
# #Export VPC ID
# #  VPC:
#     Description: VPC ID
#     Export:
#       Name: !Sub ${AWS::StackName}-VPC
#     Value: !Ref VPC

#  #Export Public Subnet 1 
#   PublicSubnet1:
#     Description: Public Subnet 1 ID
#     Export:
#       Name: !Sub ${AWS::StackName}-PublicSubnet1
#     Value: !Ref PublicSubnet1

# #Export Public Subnet 1 
#   PublicSubnet2:
#     Description: Public Subnet 2 
#     Export:
#       Name: !Sub ${AWS::StackName}-PublicSubnet2
#     Value: !Ref PublicSubnet2

#   SecurityGroup:
#     Description: SecurityGroup1_for_all
#     Export:
#       Name: !Sub ${AWS::StackName}-SecurityGroup
#     Value: !Ref SecurityGroup
